pipeline {
    agent any

    environment {
        IMAGE_NAME = "java-web-app"
        DOCKER_REGISTRY = "nchandrocode1"
        DOCKER_CREDENTIALS_ID = "docker-hub-credentials"
        CONTAINER_PORT = "8080"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    def gitRepoUrl = 'https://github.com/nchandro-2025/Git_Training.git'
                    checkout([$class: 'GitSCM', 
                        branches: [[name: '*/main']], 
                        userRemoteConfigs: [[url: gitRepoUrl]], 
                        extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'CloneOption', noTags: false, shallow: true, depth: 1]]
                    ])
                }
            }
        }

        stage('Build WAR') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${IMAGE_NAME}")
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    docker.withRegistry('', "${DOCKER_CREDENTIALS_ID}") {
                        docker.image("${DOCKER_REGISTRY}/${IMAGE_NAME}").push()
                    }
                }
            }
        }

        stage('Deploy Container') {
            steps {
                sh '''
                echo "Deploying Docker container..."
                docker run -d -p 8080:${CONTAINER_PORT} ${DOCKER_REGISTRY}/${IMAGE_NAME}
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
